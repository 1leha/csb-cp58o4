{"version":3,"sources":["redux/auth/selectors.js","hooks/useAuth.js","components/Navigation/Navigation.js","components/UserMenu/UserMenu.js","components/AuthNav/AuthNav.js","components/AppBar/AppBar.js","components/Layout.js","components/PrivateRoute.js","components/RestrictedRoute.js","components/App.js","redux/tasks/slice.js","redux/auth/slice.js","redux/store.js","index.js","redux/auth/operations.js","redux/tasks/operations.js","components/Navigation/Navigation.module.css","components/UserMenu/UserMenu.module.css","components/AuthNav/AuthNav.module.css","components/AppBar/AppBar.module.css"],"names":["selectIsLoggedIn","state","auth","isLoggedIn","selectUser","user","selectIsRefreshing","isRefreshing","useAuth","useSelector","Navigation","className","css","link","to","UserMenu","dispatch","useDispatch","wrapper","username","name","type","onClick","logOut","AuthNav","AppBar","header","Layout","style","maxWidth","margin","padding","fallback","position","reverseOrder","PrivateRoute","Component","component","redirectTo","RestrictedRoute","HomePage","lazy","RegisterPage","LoginPage","TasksPage","App","useEffect","refreshUser","path","element","index","handlePending","isLoading","handleRejected","action","error","payload","tasksReducer","createSlice","initialState","items","extraReducers","fetchTasks","pending","addTask","deleteTask","rejected","fulfilled","push","findIndex","task","id","splice","reducer","authReducer","email","token","register","logIn","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","persistReducer","tasks","devTools","process","persistor","persistStore","ReactDOM","createRoot","document","getElementById","render","StrictMode","loading","axios","defaults","baseURL","setAuthHeader","headers","common","Authorization","createAsyncThunk","credentials","thunkAPI","post","res","data","rejectWithValue","message","_","getState","persistedToken","get","text","response","taskId","delete","module","exports"],"mappings":"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","file":"static/js/main.9719eb2f.chunk.js","sourcesContent":["export const selectIsLoggedIn = state => state.auth.isLoggedIn;\n\nexport const selectUser = state => state.auth.user;\n\nexport const selectIsRefreshing = state => state.auth.isRefreshing;\n","import { useSelector } from 'react-redux';\nimport {\n  selectUser,\n  selectIsLoggedIn,\n  selectIsRefreshing,\n} from 'redux/auth/selectors';\n\nexport const useAuth = () => {\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const isRefreshing = useSelector(selectIsRefreshing);\n  const user = useSelector(selectUser);\n\n  return {\n    isLoggedIn,\n    isRefreshing,\n    user,\n  };\n};\n","import { NavLink } from 'react-router-dom';\nimport { useAuth } from 'hooks';\nimport css from './Navigation.module.css';\n\nexport const Navigation = () => {\n  const { isLoggedIn } = useAuth();\n\n  return (\n    <nav>\n      <NavLink className={css.link} to=\"/\">\n        Home\n      </NavLink>\n      {isLoggedIn && (\n        <NavLink className={css.link} to=\"/tasks\">\n          Tasks\n        </NavLink>\n      )}\n    </nav>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { logOut } from 'redux/auth/operations';\nimport { useAuth } from 'hooks';\nimport css from './UserMenu.module.css';\n\nexport const UserMenu = () => {\n  const dispatch = useDispatch();\n  const { user } = useAuth();\n\n  return (\n    <div className={css.wrapper}>\n      <p className={css.username}>Welcome, {user.name}</p>\n      <button type=\"button\" onClick={() => dispatch(logOut())}>\n        Logout\n      </button>\n    </div>\n  );\n};\n","import { NavLink } from 'react-router-dom';\nimport css from './AuthNav.module.css';\n\nexport const AuthNav = () => {\n  return (\n    <div>\n      <NavLink className={css.link} to=\"/register\">\n        Register\n      </NavLink>\n      <NavLink className={css.link} to=\"/login\">\n        Log In\n      </NavLink>\n    </div>\n  );\n};\n","import { Navigation } from '../Navigation/Navigation';\nimport { UserMenu } from '../UserMenu/UserMenu';\nimport { AuthNav } from '../AuthNav/AuthNav';\nimport { useAuth } from 'hooks';\nimport css from './AppBar.module.css';\n\nexport const AppBar = () => {\n  const { isLoggedIn } = useAuth();\n\n  return (\n    <header className={css.header}>\n      <Navigation />\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\n    </header>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport { Toaster } from 'react-hot-toast';\nimport { AppBar } from './AppBar/AppBar';\nimport { Suspense } from 'react';\n\nexport const Layout = () => {\n  return (\n    <div style={{ maxWidth: 960, margin: '0 auto', padding: '0 16px' }}>\n      <AppBar />\n      <Suspense fallback={null}>\n        <Outlet />\n      </Suspense>\n      <Toaster position=\"top-right\" reverseOrder={false} />\n    </div>\n  );\n};\n","import { Navigate } from 'react-router-dom';\nimport { useAuth } from 'hooks';\n\n/**\n * - If the route is private and the user is logged in, render the component\n * - Otherwise render <Navigate> to redirectTo\n */\n\nexport const PrivateRoute = ({ component: Component, redirectTo = '/' }) => {\n  const { isLoggedIn, isRefreshing } = useAuth();\n  const shouldRedirect = !isLoggedIn && !isRefreshing;\n  return shouldRedirect ? <Navigate to={redirectTo} /> : Component;\n};\n","import { useAuth } from 'hooks';\nimport { Navigate } from 'react-router-dom';\n\n/**\n * - If the route is restricted and the user is logged in, render a <Navigate> to redirectTo\n * - Otherwise render the component\n */\n\nexport const RestrictedRoute = ({ component: Component, redirectTo = '/' }) => {\n  const { isLoggedIn } = useAuth();\n  return isLoggedIn ? <Navigate to={redirectTo} /> : Component;\n};\n","import { useEffect, lazy } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Route, Routes } from 'react-router-dom';\nimport { Layout } from './Layout';\nimport { PrivateRoute } from './PrivateRoute';\nimport { RestrictedRoute } from './RestrictedRoute';\nimport { refreshUser } from 'redux/auth/operations';\nimport { useAuth } from 'hooks';\n\nconst HomePage = lazy(() => import('../pages/Home'));\nconst RegisterPage = lazy(() => import('../pages/Register'));\nconst LoginPage = lazy(() => import('../pages/Login'));\nconst TasksPage = lazy(() => import('../pages/Tasks'));\n\nexport const App = () => {\n  const dispatch = useDispatch();\n  const { isRefreshing } = useAuth();\n\n  useEffect(() => {\n    dispatch(refreshUser());\n  }, [dispatch]);\n\n  return isRefreshing ? (\n    <b>Refreshing user...</b>\n  ) : (\n    <Routes>\n      <Route path=\"/\" element={<Layout />}>\n        <Route index element={<HomePage />} />\n        <Route\n          path=\"/register\"\n          element={\n            <RestrictedRoute redirectTo=\"/tasks\" component={<RegisterPage />} />\n          }\n        />\n        <Route\n          path=\"/login\"\n          element={\n            <RestrictedRoute redirectTo=\"/tasks\" component={<LoginPage />} />\n          }\n        />\n        <Route\n          path=\"/tasks\"\n          element={\n            <PrivateRoute redirectTo=\"/login\" component={<TasksPage />} />\n          }\n        />\n      </Route>\n    </Routes>\n  );\n};\n","import { createSlice } from '@reduxjs/toolkit';\nimport { logOut } from 'redux/auth/operations';\nimport { fetchTasks, addTask, deleteTask } from './operations';\n\nconst handlePending = state => {\n  state.isLoading = true;\n};\n\nconst handleRejected = (state, action) => {\n  state.isLoading = false;\n  state.error = action.payload;\n};\n\nconst tasksSlice = createSlice({\n  name: 'tasks',\n  initialState: {\n    items: [],\n    isLoading: false,\n    error: null,\n  },\n  extraReducers: {\n    [fetchTasks.pending]: handlePending,\n    [addTask.pending]: handlePending,\n    [deleteTask.pending]: handlePending,\n    [fetchTasks.rejected]: handleRejected,\n    [addTask.rejected]: handleRejected,\n    [deleteTask.rejected]: handleRejected,\n    [fetchTasks.fulfilled](state, action) {\n      state.isLoading = false;\n      state.error = null;\n      state.items = action.payload;\n    },\n    [addTask.fulfilled](state, action) {\n      state.isLoading = false;\n      state.error = null;\n      state.items.push(action.payload);\n    },\n    [deleteTask.fulfilled](state, action) {\n      state.isLoading = false;\n      state.error = null;\n      const index = state.items.findIndex(\n        task => task.id === action.payload.id\n      );\n      state.items.splice(index, 1);\n    },\n    [logOut.fulfilled](state) {\n      state.items = [];\n      state.error = null;\n      state.isLoading = false;\n    },\n  },\n});\n\nexport const tasksReducer = tasksSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\nimport { register, logIn, logOut, refreshUser } from './operations';\n\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: false,\n  isRefreshing: false,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  extraReducers: {\n    [register.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [logIn.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [logOut.fulfilled](state) {\n      state.user = { name: null, email: null };\n      state.token = null;\n      state.isLoggedIn = false;\n    },\n    [refreshUser.pending](state) {\n      state.isRefreshing = true;\n    },\n    [refreshUser.fulfilled](state, action) {\n      state.user = action.payload;\n      state.isLoggedIn = true;\n      state.isRefreshing = false;\n    },\n    [refreshUser.rejected](state) {\n      state.isRefreshing = false;\n    },\n  },\n});\n\nexport const authReducer = authSlice.reducer;\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { tasksReducer } from './tasks/slice';\nimport { authReducer } from './auth/slice';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\n// Persisting token field from auth slice to localstorage\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    tasks: tasksReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { App } from 'components/App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './redux/store';\nimport 'modern-normalize';\nimport './styles.css';\n\nReactDOM.createRoot(document.getElementById('root')).render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>\n);\n","import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\naxios.defaults.baseURL = 'https://goit-task-manager.herokuapp.com/';\n\n// Utility to add JWT\nconst setAuthHeader = token => {\n  axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n};\n\n// Utility to remove JWT\nconst clearAuthHeader = () => {\n  axios.defaults.headers.common.Authorization = '';\n};\n\n/*\n * POST @ /users/signup\n * body: { name, email, password }\n */\nexport const register = createAsyncThunk(\n  'auth/register',\n  async (credentials, thunkAPI) => {\n    try {\n      const res = await axios.post('/users/signup', credentials);\n      // After successful registration, add the token to the HTTP header\n      setAuthHeader(res.data.token);\n      return res.data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n\n/*\n * POST @ /users/login\n * body: { email, password }\n */\nexport const logIn = createAsyncThunk(\n  'auth/login',\n  async (credentials, thunkAPI) => {\n    try {\n      const res = await axios.post('/users/login', credentials);\n      // After successful login, add the token to the HTTP header\n      setAuthHeader(res.data.token);\n      return res.data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n\n/*\n * POST @ /users/logout\n * headers: Authorization: Bearer token\n */\nexport const logOut = createAsyncThunk('auth/logout', async (_, thunkAPI) => {\n  try {\n    await axios.post('/users/logout');\n    // After a successful logout, remove the token from the HTTP header\n    clearAuthHeader();\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.message);\n  }\n});\n\n/*\n * GET @ /users/current\n * headers: Authorization: Bearer token\n */\nexport const refreshUser = createAsyncThunk(\n  'auth/refresh',\n  async (_, thunkAPI) => {\n    // Reading the token from the state via getState()\n    const state = thunkAPI.getState();\n    const persistedToken = state.auth.token;\n\n    if (persistedToken === null) {\n      // If there is no token, exit without performing any request\n      return thunkAPI.rejectWithValue('Unable to fetch user');\n    }\n\n    try {\n      // If there is a token, add it to the HTTP header and perform the request\n      setAuthHeader(persistedToken);\n      const res = await axios.get('/users/me');\n      return res.data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\n// GET @ /tasks\nexport const fetchTasks = createAsyncThunk(\n  'tasks/fetchAll',\n  async (_, thunkAPI) => {\n    try {\n      const res = await axios.get('/tasks');\n      return res.data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n\n// POST @ /tasks\nexport const addTask = createAsyncThunk(\n  'tasks/addTask',\n  async (text, thunkAPI) => {\n    try {\n      const response = await axios.post('/tasks', { text });\n      return response.data;\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e.message);\n    }\n  }\n);\n\n// DELETE @ /tasks/:id\nexport const deleteTask = createAsyncThunk(\n  'tasks/deleteTask',\n  async (taskId, thunkAPI) => {\n    try {\n      const response = await axios.delete(`/tasks/${taskId}`);\n      return response.data;\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e.message);\n    }\n  }\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navigation_link__12o2K\",\"active\":\"Navigation_active__1Sofg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"UserMenu_wrapper__3KSXQ\",\"username\":\"UserMenu_username__2nvIz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"AuthNav_link__2ejsg\",\"active\":\"AuthNav_active__2WI0M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__1Yk8v\"};"],"sourceRoot":""}